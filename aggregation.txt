SELECT SUM(poster_qty) poster
FROM orders;

SELECT SUM(standard_qty) standard
FROM orders;

SELECT SUM(total_amt_usd) total_usd
FROM orders;

SELECT standard_amt_usd + gloss_amt_usd total_amt
FROM orders;

SELECT SUM(standard_amt_usd)/SUM(standard_qty)
from orders;

********************************************************

SELECT MIN(occurred_at)
FROM orders;

SELECT occurred_at
FROM orders
ORDER BY occurred_at
LIMIT 1;

SELECT MAX(occurred_at)
FROM web_events;

SELECT occurred_at
FROM web_events
ORDER BY occurred_at desc
LIMIT 1;

SELECT AVG(standard_qty) avg_stand_qty,
AVG(poster_qty) avg_post_qty,
AVG(gloss_qty) avg_gloss_qty,
AVG(standard_amt_usd) avg_stand_usd,
AVG(poster_amt_usd) avg_post_usd,
AVG(gloss_amt_usd) avg_gloss_usd
FROM orders;

***********************************************

SELECT a.name, o.occurred_at
FROM orders o
JOIN accounts a
ON o.account_id=a.id
ORDER BY o.occurred_at
LIMIT 1;

SELECT a.name, SUM(total_amt_usd)
FROM orders o
JOIN accounts a
ON o.account_id=a.id
GROUP BY a.name;

SELECT w.occurred_at, w.channel, a.name
FROM web_events w
JOIN accounts a
ON w.account_id=a.id
ORDER BY w.occurred_at DESC
LIMIT 1;

SELECT channel, COUNT(*)
FROM web_events
GROUP BY channel;

SELECT a.primary_poc, w.occurred_at
FROM accounts a
JOIN web_events w
ON w.account_id=a.id
ORDER BY w.occurred_at
LIMIT 1;

SELECT a.name, MIN(o.total_amt_usd)
FROM accounts a
JOIN orders o
ON o.account_id=a.id
GROUP BY a.name
ORDER BY o.total_amt_usd;

SELECT r.name, COUNT(s.*) num_reps
FROM region r
JOIN sales_reps s
ON s.region_id=r.id
GROUP BY r.name
ORDER BY num_reps;

************************************************

SELECT a.name, AVG(o.standard_qty) standard, AVG(o.gloss_qty) gloss, AVG(o.poster_qty) poster
FROM accounts a
JOIN orders o
ON o.account_id=a.id
GROUP BY a.name;

SELECT a.name, AVG(o.standard_amt_usd) standard_usd, AVG(o.gloss_amt_usd) gloss_usd, AVG(o.poster_amt_usd) poster_usd
FROM accounts a
JOIN orders o
ON o.account_id=a.id
GROUP BY a.name;

SELECT s.name, w.channel channel, COUNT(w.channel) count
FROM accounts a
JOIN sales_reps s
ON a.sales_rep_id=s.id
JOIN web_events w
ON w.account_id=a.id
GROUP BY s.name, w.channel
ORDER BY count DESC;

SELECT r.name region, w.channel channel, COUNT(w.channel) count
FROM region r
JOIN sales_reps s
ON s.region_id=r.id
JOIN accounts a
ON a.sales_rep_id=s.id
JOIN web_events w
ON w.account_id=a.id
GROUP BY r.name, w.channel
ORDER BY count DESC;

********************************************************************************

SELECT s.name, COUNT(*)
FROM sales_reps s
JOIN accounts a
ON a.sales_rep_id=s.id
GROUP BY 1
HAVING COUNT(*) > 5;

SELECT a.name, count(*)
FROM accounts a
JOIN orders r
ON r.account_id=a.id
GROUP BY 1
HAVING count(*) > 20;

 SELECT a.name, COUNT(*) order_count
FROM accounts a
JOIN orders o
ON a.id=o.account_id
GROUP BY 1
ORDER BY order_count DESC
LIMIT 1;

SELECT a.name, SUM(o.total_amt_usd)total_usd
FROM orders o
JOIN accounts a
ON o.account_id=a.id
GROUP BY 1
HAVING SUM(o.total_amt_usd) > 30000;

SELECT a.name, SUM(o.total_amt_usd) total_usd
FROM orders o
JOIN accounts a
ON a.id=o.account_id
GROUP BY 1
HAVING SUM(o.total_amt_usd) < 1000;

SELECT a.name, SUM(o.total_amt_usd) total_usd
FROM orders o
JOIN accounts a
ON o.account_id=a.id
GROUP BY 1
ORDER BY total_usd DESC
LIMIT 1;

SELECT a.name, SUM(o.total_amt_usd) total_usd
FROM orders o
JOIN accounts a
ON a.id=o.account_id
GROUP BY a.name
ORDER BY total_usd
LIMIT 1;

SELECT a.name, COUNT(s.channel)
FROM accounts a
JOIN web_events s
ON a.id=s.account_id
WHERE s.channel='facebook' 
GROUP BY 1
HAVING COUNT(s.channel) > 6;

SELECT a.name, COUNT(s.channel) count
FROM accounts a
JOIN web_events s
ON a.id=s.account_id
WHERE s.channel='facebook'
GROUP BY 1 
ORDER BY count DESC
LIMIT 1;

SELECT w.channel, COUNT(a.name)
FROM accounts a
JOIN web_events w
ON a.id=w.account_id
GROUP BY 1
ORDER BY COUNT(a.name) DESC
LIMIT 1;

***************************************************

SELECT DATE_PART('year', o.occurred_at), SUM(o.total_amt_usd)
FROM orders o
GROUP BY 1
ORDER BY 2 DESC;

SELECT DATE_PART('month', o.occurred_at), SUM(o.total_amt_usd)
FROM orders o
GROUP BY 1
ORDER BY 1;

SELECT DATE_PART('year', occurred_at), SUM(total)
FROM orders
GROUP BY 1
ORDER BY 1;

SELECT DATE_PART('month', occurred_at) AS month, SUM(total)total_number
FROM orders
WHERE occurred_at BETWEEN '2014-01-01' AND '2017-01-01'
GROUP BY 1
ORDER BY 1;

SELECT DATE_TRUNC('month', o.occurred_at), SUM(o.total_amt_usd) AS total_usd
FROM orders o
JOIN accounts a
ON o.account_id=a.id
WHERE a.name='Walmart'
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1;

********************************************************************************

SELECT account_id, total, CASE WHEN total_amt_usd >= 3000 THEN 'Large'
ELSE 'Small' END
FROM orders;

SELECT CASE WHEN total >= 2000 THEN 'At Least 2000'
WHEN total < 2000 and total >= 1000 THEN 'Between 1000 and 2000'
ELSE 'Less than 1000' END AS category,
COUNT(*) AS order_count
FROM orders
GROUP BY 1;

SELECT a.name, SUM(o.total_amt_usd) total_spent, CASE WHEN SUM(total_amt_usd) > 200000 THEN 'top level'
WHEN SUM(total_amt_usd) >=100000 and SUM(total_amt_usd) <=200000 THEN 'second level'
ELSE 'Lowest Level' END AS level
FROM orders o
JOIN accounts a
ON o.account_id=a.id
GROUP BY 1
ORDER BY 2 DESC;

SELECT a.name, SUM(o.total_amt_usd) total_spent, CASE WHEN SUM(o.total_amt_usd) > 200000 THEN 'top level'
WHEN SUM(o.total_amt_usd) >=100000 and SUM(o.total_amt_usd) <=200000 THEN 'second level'
ELSE 'Lowest Level' END AS level
FROM orders o
JOIN accounts a
ON o.account_id=a.id
WHERE o.occurred_at BETWEEN '2016-01-01' AND '2017-01-01'
GROUP BY 1
ORDER BY 2 DESC;

SELECT s.name, COUNT(*), CASE WHEN COUNT(*) > 200 THEN 'top'
ELSE 'not' END AS TOP
FROM sales_reps s
JOIN accounts a
ON s.id=a.sales_rep_id
JOIN orders o
ON o.account_id=a.id
GROUP BY 1
ORDER BY COUNT(*) DESC;

SELECT s.name, COUNT(*), CASE WHEN COUNT(*) > 200 AND SUM(o.total_amt_usd) > 750000 THEN 'top'
WHEN COUNT(*) < 200 AND COUNT(*) > 150 AND SUM(o.total_amt_usd) > 500000 THEN 'middle' ELSE 'Low' END as top
FROM sales_reps s
JOIN accounts a
ON s.id=a.sales_rep_id
JOIN orders o
ON o.account_id=a.id
GROUP BY 1
ORDER BY 3 DESC;